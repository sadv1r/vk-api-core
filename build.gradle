group 'ru.sadv1r.vk'
version '0.1.2'

buildscript {
    ext.kotlin_version = '1.0.4'
    ext.jackson_version = '2.8.4'
    ext.jackson_kotlin_version = '2.8.4'
    ext.logback_version = '1.1.7'
    ext.junit_version = '4.12'
    ext.dokka_version = '0.9.9'

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
        classpath "org.ajoberstar:gradle-git:1.4.2"
        classpath "com.adaptc.gradle:nexus-workflow:0.6"
        //classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'org.ajoberstar.github-pages'
apply plugin: 'maven-publish'

apply plugin: 'maven'
apply plugin: 'signing'

//apply plugin: 'com.bmuschko.nexus'

apply plugin: "jacoco"

apply from: "jacoco.gradle"

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_kotlin_version"
    compile "ch.qos.logback:logback-classic:$logback_version"

    testCompile group: 'junit', name: 'junit', version: "$junit_version"

    testCompile "org.jacoco:jacoco-maven-plugin:0.7.7.201606060606"
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

dokka {

}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = "javadoc"
    outputDirectory = "$buildDir/dokkaJavadoc"
}

githubPages {
    repoUri = 'https://github.com/sadv1r/vk-parser-doc.git'
    credentials {
        username = project.hasProperty('githubToken') ? project.githubToken : ''
        password = ''
    }
    pages {
        from 'build/dokka/vk-parser'
        from 'build/dokka/style.css'
    }
}
publishing {
    publications {
        maven(MavenPublication) {
            from components.java


        }
    }
}



task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from "$buildDir/dokkaJavadoc"
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: project.hasProperty("ossrhUsername")?project.property("ossrhUsername"):'',
                        password: project.hasProperty("ossrhPassword")?project.property("ossrhPassword"):'')
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: project.hasProperty("ossrhUsername")?project.property("ossrhUsername"):'',
                        password: project.hasProperty("ossrhPassword")?project.property("ossrhPassword"):'')
            }

            pom.project {
                name rootProject.name
                packaging 'jar'
                // optionally artifactId can be defined here
                description "vk.com API implementation"
                url 'https://github.com/sadv1r/vk-parser'

                scm {
                    connection 'scm:git:https://github.com/sadv1r/vk-parser.git'
                    developerConnection 'scm:git:ssh://github.com:sadv1r/vk-parser.git'
                    url 'https://github.com/sadv1r/vk-parser/tree/master'
                }

                licenses {
                    license {
                        name 'Creative Commons Attribution-ShareAlike 4.0 International License'
                        url 'https://creativecommons.org/licenses/by-sa/4.0/'
                    }
                }

                developers {
                    developer {
                        id 'sadv1r'
                        name 'Dmitry Ivanov'
                        email 'me@sadv1r.ru'
                        url 'http://sadv1r.ru'
                    }
                }
            }
        }
    }
}